*-----------------------------
* SET UP PROGRAMMABLE
* INTERRUPT TIMER
*
TIMER
*
*SET UP INTERRUPTS
 ORCC #$50      OFF FOR NOW

*disable interrupts
 LDB #$2C
 STB $FF01 horiz sync clock IRQ
*STB $FF03 field sync clock IRQ DEBUG!
 STB $FF23 cart FIRQ
 LDB $FF21
 ANDB #$FC
 STB $FF21 carrier detect FIRQ

*dismiss interrupts
 LDB $FF00 horiz sync clock IRQ
 LDB $FF02 field sync clock IRQ
 LDB $FF22 cart FIRQ
 LDB $FF20 carrier detect FIRQ
*
 LEAX DOFIRQ,PCR
 TST CARD
 BEQ BITBG        if card exists,
 LEAX DOPRNT,PCR  use printer driver
BITBG
 STX $110       SET FIRQ PROGRAM
*
* SET-UP TIMER INTERRUPT
 LDB #$60
 STB $FF91      SELECT CLOCK
 CLR $FF92
 LDB #$20
 STB $FF93      ENABLE TIMER INTERRUPT
 LDB #$5C
 STB $FF90  ENABLE GIME FIRQ

* set communications baudrate
 LEAX BDTABB,PCR
 LDB BBAUD
 LSLB
 CLRA
 LDD D,X
 ADDD TUNE
 STB $FF95
 STA $FF94

*
* INIT XMITTER/RECVR
INITXR
 CLR RSLICE
 CLR XSLICE
 CLR RBIT
 CLR XBIT
 RTS
*-----------------------------
* PROCESS TIMER INTERRUPT
*
DOFIRQ
 TST PRLEN    bitbanger using printer?
 LBNE DOPRNT
 TST PRLEN+1
 LBNE DOPRNT
 STD DHOLD
 CLR $FF93      CLEAR TIMER INTERRUPT
 LDB #$20
 STB $FF93

*
*SERVICE TRANSMITTER
*
 DEC XSLICE
 BNE XMI9
 STX XHOLD
 LDB #BAUDX
 STB XSLICE
 LDB XBIT
 BEQ XMI1
 DEC XBIT
 BNE XMI3
XMI1
 LDX GETOUT
 LDB OCNT
 BEQ XMI8
 DEC OCNT
 LDB ,X+     ON NEXT BYTE IN BUFFER
 STB XCHAR   ELSE: CHAR TO SEND
 CMPX #OUTBUF+SZOUT
 BNE BXMI2
 LDX #OUTBUF
BXMI2
 STX GETOUT ADVANCE BUFFER POINTER
 LDB #10
 STB XBIT   XMIT 10 BITS
 ANDCC #$FE START BIT->CARRY
 BRA XMI4
XMI3
 LDB XCHAR
 ORCC #1    STOP BIT->CARRY
 RORB       DATA BIT->CARRY
 STB XCHAR
XMI4
 LDB #0
 ROLB       CARRY->RS232 OUT
 ROLB
 STB $FF20  
XMI8
 LDX XHOLD
XMI9

*
*SERVICE RECEIVER
*
 LDB RBIT       IF NOT RECEIVING
 BEQ RCI1        GO CHECK FOR START BIT
 DEC RSLICE     ELSE
 BEQ RCI3        CONTINUE TO RECEIVE
 BRA RCI9
RCI1
 LDB $FF22  WATCH FOR START BIT
 RORB
 BCC RCI2
 CLR RSLICE NO START, CLEAR COUNTER
 BRA RCI9
RCI2
 INC RSLICE POSSIBLE START, INC COUNTER
 LDB RSLICE
 CMPB #BAUDX/2  IF 1/2 WAY, START RCVR
 BNE RCI9
 LDB #10    RECEIVE 10 BITS
 STB RBIT
RCI3
 DEC RBIT
 BEQ RCI4   SEE IF FINISHED BYTE
 LDB $FF22
 RORB       DATA BIT->CARRY
 LDB RCHAR
 RORB       CARRY->RECV BYTE
 STB RCHAR
 LDB #BAUDX
 STB RSLICE SET COUNTER FOR NXT BIT
 BRA RCI9
RCI4
 STX XHOLD
 LDX PUTIN
 LDB RCHAR
 ANDB MASK  strip parity
 STB ,X+    DELIVER CHAR TO BUFFER
 CMPB #XOFF lock transmit?
 BNE RCI4A
 TST MASK   don't lock if XMODEM active
 BLT RCI4A
 INC XLOCK
RCI4A
 CMPB #XON  unlock transmit?
 BNE RCI4B
 CLR XLOCK
RCI4B
 INC ICNT
 CMPX #INBUF+SZIN
 BNE BRCI5
 LDX #INBUF
BRCI5
 STX PUTIN
 LDX XHOLD
RCI9

 LDD DHOLD
 RTI

* FIRQ handler for printer
DOPRNT
 STD DHOLD
 STX XHOLD
 CLR $FF93      CLEAR TIMER INTERRUPT
 LDB #$20
 STB $FF93

 LDB XBIT
 BEQ XMP1
 DEC XBIT
 BNE XMP3
XMP1
***** figure out next char to print
 LDX PRPTR
 BEQ XMP9

*don't print it if printer busy
 LDA $FF22
 ANDA #1
 TSTA
 BNE XMP9

 LDD PRLEN
 BEQ XMP9
 SUBD #1
 STD PRLEN

* restore comm baudrate
 BNE A@
 LDB BBAUD
 LEAU BDTABB,PCR
 CLRA
 LSLB
 LDD D,U
 ADDD TUNE
 STB $FF95
 STA $FF94
 LBSR INITXR
 BRA XMP9
A@

*** set up for next byte
 LDA #$60   force map 0
 STA $FF91
 LDB ,X+     ON NEXT BYTE IN BUFFER
 LBSR REMAP  restore map
 STB XCHAR   ELSE: CHAR TO SEND
 STX PRPTR  ADVANCE BUFFER POINTER
 LDB #10    10-bit frame
*LDB #20    (try 20)
 STB XBIT   XMIT 10 BITS
 ANDCC #$FE START BIT->CARRY
 BRA XMP4

*** send next bit ***
XMP3
 LDB XCHAR
 ORCC #1    STOP BIT->CARRY
 RORB       DATA BIT->CARRY
 STB XCHAR
XMP4
 LDB #0
 ROLB       CARRY->RS232 OUT
 ROLB
 STB $FF20  

XMP9
 LDX XHOLD
 LDD DHOLD
 RTI

